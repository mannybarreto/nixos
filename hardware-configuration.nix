# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/e2403507-d93e-4434-be10-bdba811c1146";
      fsType = "ext4";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/C92D-441B";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/af4b9bb2-ff21-4885-951a-ec36a67f306c"; }
    ];

  fileSystems."/data" =
    { device = "/dev/disk/by-uuid/be25e509-1d47-4222-bd5b-b9b29ff2c8a5";
      fsType = "ext4";
    };

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp10s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp2s0f0u2u4u5.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp9s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;

  # Graphics Card:
  
  # Enable OpenGL and Vulkan support, including 32-bit for gaming.
  hardware.graphics.enable = true;
  hardware.graphics.enable32Bit = true;

  # Load  Nvidia for Xorg.
  services.xserver.videoDrivers = ["nvidia"];
  
  hardware.nvidia = {
    # Required for newer GPUs.
    open = true;

    # Critical for Wayland compositors.
    modesetting.enable = true;

    # Essential for stability, esp with suspend/resume.
    powerManagement.enable = true;
   
    nvidiaSettings = true;

    package = config.boot.kernelPackages.nvidiaPackages.latest;
  };
  
  # Install VA-API driver wrapper for Nvidia.
  hardware.opengl.extraPackages = with pkgs; [
    nvidia-vaapi-driver
  ];

  environment.variables = {
    LIBVA_DRIVER_NAME = "nvidia";
    NVD_BACKEND = "direct";
    WLR_NO_HARDWARE_CURSORS = "1";
    NIXOS_OZONE_WL = "1";
  };
}
